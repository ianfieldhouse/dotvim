snippet from
	from ${1:package} import ${2:module}
# Module Docstring
snippet doc
	"""
	File: ${1:`Filename('$1.py', 'foo.py')`}
	Author: ${2:`g:snips_author`}
	Description: ${3}
	"""
# dowh - does the same as do...while in other languages
snippet dowh
	while True:
		${1:# code...}
		if ${2:condition}:
			break
snippet with
	with ${1:expr} as ${2:var}:
		${3:# code...}
# Ifs
snippet if
	if ${1:condition}:
		${2:code...}
snippet el
	else:
		${1:code...}
snippet ei
	elif ${1:condition}:
		${2:code...}
# Encodes
snippet cutf8
	# -*- coding: utf-8 -*-
snippet clatin1
	# -*- coding: latin-1 -*-
snippet cascii
	# -*- coding: ascii -*-
snippet dict
	${1:dict} = {'${2}':'${3}'}
snippet list
	${1:list} = ['${2}','${3}']
snippet print 1
	print '%s' % ('${1}')
snippet print 2
	print '%s%s' % ('${1}','${2}')
snippet print 3
	print '%s%s%s' % ('${1}','${2}','${3}')
snippet print 4
	print '%s%s%s%s' % ('${1}','${2}', '${3}','${4}')
# list comprehension
snippet ls
	[${1:expression} for ${2:variable} in ${3:sequence}]${4}
# dict comprehension
snippet di
	{${1:expression} for ${2:variable1}, ${3:variable2} in ${4:sequence}}${5}
# python debugger (pdb)
snippet pdb
	import pdb; pdb.set_trace()
# ipython debugger (ipdb)
snippet ipdb
	import ipdb; ipdb.set_trace()
snippet "
	""" ${1:doc} """
snippet ml"
	"""
	${1:doc}
	"""
# test function/method
snippet test
	def test_${1:description}(${2:`indent('.') ? 'self' : ''`}):
		${3:pass}
# test case
snippet testcase
	class ${1:ExampleCase}(unittest.TestCase):
		
		def test_${2:description}(self):
			${3:pass}
snippet fut
	from __future__ import ${1}
